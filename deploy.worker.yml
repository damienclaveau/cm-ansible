---
- name: "Provision worker instance"
  hosts: localhost
  gather_facts: False
  pre_tasks:
    - name: Gather worker Role specific instance configuration
      include_vars: "group_vars/workers/aws.yml"
  tasks:
    - name: Launch instance
      ec2:
        aws_access_key: "{{aws_access_key}}"
        aws_secret_key: "{{aws_secret_key}}"
        region: "us-west-2"
        zone: "us-west-2c"
        key_name: "{{key_name}}"
        instance_type: "{{instance_type}}"
        image: "{{image_id}}"
        wait: yes
        group: "{{sg_group}}"
        count: 1
        volumes: "{{volumes}}"
        vpc_subnet_id: "{{vpc_subnet_id}}"
        assign_public_ip: yes
      register: ec2
    - set_fact:
        ec2: "{{ec2}}"
    - debug: msg="{{ec2}}"
    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: lab,workers,just_created
      with_items: "{{ ec2.instances }}"
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"
    - name: "Wait for instance to be fully up"
      pause:
        seconds: 15

- name: "Configure worker instance"
  hosts: just_created
  sudo: yes
  roles:
    - {
        role: prepare_host,
        setup_cm_agent: "true",
        setup_host_security: false,
        setup_host_networking: false,
        setup_host_disks: "true",
        setup_host_commons: "true"
      }

- name: "Configure worker role"
  hosts: localhost
  tasks:
    - name: "Wait for host to contact cloudera manager server"
      pause:
        seconds: 30
    - name: "Add Node to cluster"
      hosts:
        cm_host: "{{cm_host}}"
        cm_username: "{{cm_username}}"
        cm_password: "{{cm_password}}"
        hostname: "{{ item.private_dns_name }}"
        action: add
      register: cm
      with_items: "{{ ec2.instances }}"
    - debug: msg="{{cm}}"
    - name: "Distribute Parcels"
      parcels:
        cm_host: "{{cm_host}}"
        cm_username: "{{cm_username}}"
        cm_password: "{{cm_password}}"
        parcel_version: "{{parcel_version}}"
        action: distribute
      register: parcel
    - debug: msg="{{parcel}}"
    - name: "Assign host template"
      template:
        cm_host: "{{cm_host}}"
        cm_username: "{{cm_username}}"
        cm_password: "{{cm_password}}"
        hostname: "{{ item.private_dns_name }}"
        template_name: "m3-medium-worker"
      with_items: "{{ ec2.instances }}"
      register: template
    - debug: msg="{{template}}"
